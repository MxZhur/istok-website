version: '3.4'

networks:
  istok:

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    restart: unless-stopped
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./src:/var/www/html:delegated
      - ./dockerfiles/nginx-production/:/etc/nginx/conf.d/:ro
      - ./dockerfiles/certbot/www:/var/www/certbot/:ro
      - ./dockerfiles/certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - php
      - mysql
    networks:
      - istok

  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: istok_website
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - istok

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - istok
  
  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin
    restart: unless-stopped
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - istok
  
  npm:
    image: node:alpine
    restart: unless-stopped
    entrypoint: /bin/sh
    tty: true
    working_dir: /srv/app
    volumes:
      - type: bind
        source: ./src
        target: /srv/app
    ports:
      - 8000:8000
      - 3000:3000
      - 3001:3001
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    networks:
      - istok

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./dockerfiles/certbot/www/:/var/www/certbot/:rw
      - ./dockerfiles/certbot/conf/:/etc/letsencrypt/:rw

volumes:
  db:
